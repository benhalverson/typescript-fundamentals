Grammar: Type Inference

In typescript
var num = 2;
num is typed as a number because 2 is a number. Typescript will automatically do the type checking

var num: number = 2;
This is a type annotations that specifically sets the type to a number.

var any1; //could be any kind of type same as javascript

var num1: number //type annotation
var num2: number = 3; type annotation setting the value
var num3 = 3; //type inference (number)
var num4 = num3 + 100; // type inference (number)
var str1 = num + 'some string'; // Type inference(string)
var wontwork: number = num1 + 'some string'; //error

Dynamic and static typing
Typescript: static typing is optional
Javascript: Dynamic typing

TypeScript: Type safety is a compile-time feature
JavaScript: Type safety happens at run-time debugging

JavaScript Dynamic Types example
var person; // can be any type
person = 'Ben Halverson';
person.substring(1, 4);

person = 1;
person.substring(1, 4);
//returns an error

Ambient Declarations

Typescript
declare var document;
document.title = "hello";
//lib.d.ts is referenced by default and contains references for the DOM and
Javascript

Javascript
document.title = "hello";
Ambient Declarations do not appear anywhere in the Javascript



Type Definition Files(aka Declaration source files)
//works with external libs like jQuery
Typescript
/// <reference path="jquery.d.ts" />  // helps provide types for jQuery
declare var $;
var data = "Hello Ben";
$("div").text(data);

Javascript
